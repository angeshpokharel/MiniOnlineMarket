{"ast":null,"code":"var _jsxFileName = \"/Users/angeshpokharel/Downloads/Compressed/mom/src/pages/public/reset-password/ResetPassword.js\";\nimport { Box, Button, Container, Grid, TextField } from \"@material-ui/core\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport YOJANA, { API_URL } from \"../../../api/api\";\nimport AddAlertMessage from \"../../../components/alert/Alert\";\nimport { AppUtils } from \"../../../utils/appUtils\";\nimport { PASSWORD_DO_NOT_MATCHES, REQUIRED_FIELD, SOMETHING_WENT_WRONG } from \"../../../utils/constants/index\";\nimport styles from \"./style\";\nexport default function ResetPassword(props) {\n  const classes = styles();\n  const {\n    register,\n    watch,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = data => {\n    let token = AppUtils.getUrlParam(\"token\"); // TODO: Roshan - send password and confirm password as postdata(i.e., object)\n\n    if (token) {\n      data.resetToken = token;\n      YOJANA.post(API_URL.resetPassword, data).then(response => {\n        AddAlertMessage({\n          type: response.data.type,\n          message: response.data.message\n        });\n\n        if (response.data.type === \"success\") {\n          props.history.push(\"/\");\n        }\n      }).catch(error => {\n        AddAlertMessage({\n          type: \"error\",\n          message: SOMETHING_WENT_WRONG\n        });\n      });\n    }\n  };\n\n  return React.createElement(Container, {\n    maxWidth: \"lg\",\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"border-bottom-heading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"\\u0924\\u092A\\u093E\\u0908\\u0902\\u0915\\u094B \\u092A\\u093E\\u0938\\u0935\\u0930\\u094D\\u0921 \\u0930\\u093F\\u0938\\u0947\\u091F \\u0917\\u0930\\u094D\\u0928\\u0941\\u0939\\u094B\\u0938\\u094D\\u0964\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    id: \"outlined-user-password\",\n    label: \"\\u092A\\u093E\\u0938\\u0935\\u0930\\u094D\\u0921:\",\n    type: \"password\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    name: \"newPassword\",\n    inputRef: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), errors.password && React.createElement(\"span\", {\n    className: \"error-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, REQUIRED_FIELD)), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    id: \"outlined-user-confirm-password\",\n    label: \"\\u092A\\u093E\\u0938\\u0935\\u0930\\u094D\\u0921 \\u0938\\u0941\\u0928\\u093F\\u0936\\u094D\\u091A\\u093F\\u0924 \\u0917\\u0930\\u094D\\u0928\\u0941\\u0939\\u094B\\u0938:\",\n    type: \"password\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    name: \"confirmPassword\",\n    inputRef: register({\n      required: true,\n      validate: value => value === watch(\"newPassword\")\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), errors.confirmPassword && errors.confirmPassword.type === \"required\" && React.createElement(\"span\", {\n    className: \"error-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, REQUIRED_FIELD), errors.confirmPassword && errors.confirmPassword.type === \"validate\" && React.createElement(\"span\", {\n    className: \"error-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, PASSWORD_DO_NOT_MATCHES, \" \"))), React.createElement(Box, {\n    item: \"true\",\n    textAlign: \"right\",\n    className: classes.btnContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Button, {\n    mr: 2,\n    className: classes.resetBtn,\n    variant: \"contained\",\n    color: \"secondary\",\n    type: \"reset\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"\\u0930\\u0926\\u094D\\u0926 \\u0917\\u0930\\u094D\\u0928\\u0941\\u0939\\u094B\\u0938\"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"\\u0938\\u0941\\u0930\\u0915\\u094D\\u0937\\u093F\\u0924 \\u0917\\u0930\\u094D\\u0928\\u0941\\u0939\\u094B\\u0938\"))), React.createElement(Box, {\n    textAlign: \"center\",\n    mt: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => {\n      props.history.push(\"/\");\n    },\n    className: classes.button,\n    startIcon: React.createElement(ArrowBackIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Back To Home\")));\n}","map":{"version":3,"sources":["/Users/angeshpokharel/Downloads/Compressed/mom/src/pages/public/reset-password/ResetPassword.js"],"names":["Box","Button","Container","Grid","TextField","ArrowBackIcon","React","useForm","YOJANA","API_URL","AddAlertMessage","AppUtils","PASSWORD_DO_NOT_MATCHES","REQUIRED_FIELD","SOMETHING_WENT_WRONG","styles","ResetPassword","props","classes","register","watch","handleSubmit","errors","onSubmit","data","token","getUrlParam","resetToken","post","resetPassword","then","response","type","message","history","push","catch","error","root","required","password","validate","value","confirmPassword","btnContainer","resetBtn","button"],"mappings":"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","sourcesContent":["import { Box, Button, Container, Grid, TextField } from \"@material-ui/core\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport YOJANA, { API_URL } from \"../../../api/api\";\nimport AddAlertMessage from \"../../../components/alert/Alert\";\nimport { AppUtils } from \"../../../utils/appUtils\";\nimport { PASSWORD_DO_NOT_MATCHES, REQUIRED_FIELD, SOMETHING_WENT_WRONG } from \"../../../utils/constants/index\";\nimport styles from \"./style\";\n\nexport default function ResetPassword(props) {\n  const classes = styles();\n  const { register, watch, handleSubmit, errors } = useForm();\n\n  const onSubmit = data => {\n    let token = AppUtils.getUrlParam(\"token\");\n    // TODO: Roshan - send password and confirm password as postdata(i.e., object)\n    if (token) {\n      data.resetToken = token;\n      YOJANA.post(API_URL.resetPassword, data)\n        .then(response => {\n          AddAlertMessage({\n            type: response.data.type,\n            message: response.data.message\n          });\n          if (response.data.type === \"success\") {\n            props.history.push(\"/\");\n          }\n        })\n        .catch(error => {\n          AddAlertMessage({ type: \"error\", message: SOMETHING_WENT_WRONG });\n        });\n    }\n  };\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.root}>\n      <h2 className=\"border-bottom-heading\">तपाईंको पासवर्ड रिसेट गर्नुहोस्।</h2>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Grid container spacing={1} alignItems=\"center\">\n          <Grid item xs={12} sm={6}>\n            <TextField\n              fullWidth\n              id=\"outlined-user-password\"\n              label=\"पासवर्ड:\"\n              type=\"password\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"newPassword\"\n              inputRef={register({ required: true })}\n            />\n            {errors.password && <span className=\"error-message\">{REQUIRED_FIELD}</span>}\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              fullWidth\n              id=\"outlined-user-confirm-password\"\n              label=\"पासवर्ड सुनिश्चित गर्नुहोस:\"\n              type=\"password\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"confirmPassword\"\n              inputRef={register({\n                required: true,\n                validate: value => value === watch(\"newPassword\")\n              })}\n            />\n            {errors.confirmPassword && errors.confirmPassword.type === \"required\" && <span className=\"error-message\">{REQUIRED_FIELD}</span>}\n            {errors.confirmPassword && errors.confirmPassword.type === \"validate\" && <span className=\"error-message\">{PASSWORD_DO_NOT_MATCHES} </span>}\n          </Grid>\n        </Grid>\n        <Box item=\"true\" textAlign=\"right\" className={classes.btnContainer}>\n          <Button mr={2}\n            className={classes.resetBtn}\n            variant=\"contained\"\n            color=\"secondary\"\n            type=\"reset\"\n          >\n            रद्द गर्नुहोस\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            सुरक्षित गर्नुहोस\n          </Button>\n        </Box>\n      </form>\n      <Box textAlign=\"center\" mt={5}>\n        <Button\n          color=\"primary\"\n          onClick={() => {\n            props.history.push(\"/\");\n          }}\n          className={classes.button}\n          startIcon={<ArrowBackIcon />}\n        >\n          Back To Home\n      </Button>\n      </Box>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}