{"ast":null,"code":"export const Cookies = {\n  writeCookie(name, value, hours, path) {\n    try {\n      if (hours) {\n        var date = new Date();\n        date.setTime(date.getTime() + hours * 60 * 60 * 1000);\n        var expires = \"; expires=\" + date.toGMTString();\n      } else {\n        // eslint-disable-next-line no-redeclare\n        var expires = \"\";\n      }\n\n      let pathName = path ? path : \"/\";\n      document.cookie = name + \"=\" + value + expires + \"; path=\" + pathName;\n    } catch (err) {\n      console.error(`Error writing to cookie`, name, value);\n    }\n  },\n\n  readCookie(name) {\n    try {\n      let nameEquals = name + \"=\";\n      let cookieArray = document.cookie.split(\";\");\n\n      for (let i = 0; i < cookieArray.length; i++) {\n        let cookieToBeChecked = cookieArray[i].trim();\n        if (cookieToBeChecked.indexOf(nameEquals) === 0) return cookieToBeChecked.substring(nameEquals.length, cookieToBeChecked.length);\n      }\n    } catch (err) {\n      console.error(`Error getting from cookie`, name);\n      return undefined;\n    }\n  },\n\n  deleteCookie(name) {\n    Cookies.writeCookie(name, \"\", -1);\n  }\n\n};","map":{"version":3,"sources":["/Users/wineikhaing/Desktop/MIU/WAA/Project/Code/MiniOnlineMarket/mom/src/utils/storage/cookies.js"],"names":["Cookies","writeCookie","name","value","hours","path","date","Date","setTime","getTime","expires","toGMTString","pathName","document","cookie","err","console","error","readCookie","nameEquals","cookieArray","split","i","length","cookieToBeChecked","trim","indexOf","substring","undefined","deleteCookie"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG;AACrBC,EAAAA,WAAW,CAACC,IAAD,EAAOC,KAAP,EAAcC,KAAd,EAAqBC,IAArB,EAA2B;AACpC,QAAI;AACF,UAAID,KAAJ,EAAW;AACT,YAAIE,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACAD,QAAAA,IAAI,CAACE,OAAL,CAAaF,IAAI,CAACG,OAAL,KAAiBL,KAAK,GAAG,EAAR,GAAa,EAAb,GAAkB,IAAhD;AACA,YAAIM,OAAO,GAAG,eAAeJ,IAAI,CAACK,WAAL,EAA7B;AACD,OAJD,MAIO;AACL;AACA,YAAID,OAAO,GAAG,EAAd;AACD;;AACD,UAAIE,QAAQ,GAAGP,IAAI,GAAGA,IAAH,GAAU,GAA7B;AACAQ,MAAAA,QAAQ,CAACC,MAAT,GAAkBZ,IAAI,GAAG,GAAP,GAAaC,KAAb,GAAqBO,OAArB,GAA+B,SAA/B,GAA2CE,QAA7D;AACD,KAXD,CAWE,OAAOG,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAe,yBAAf,EAAyCf,IAAzC,EAA+CC,KAA/C;AACD;AACF,GAhBoB;;AAiBrBe,EAAAA,UAAU,CAAChB,IAAD,EAAO;AACf,QAAI;AACF,UAAIiB,UAAU,GAAGjB,IAAI,GAAG,GAAxB;AACA,UAAIkB,WAAW,GAAGP,QAAQ,CAACC,MAAT,CAAgBO,KAAhB,CAAsB,GAAtB,CAAlB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,WAAW,CAACG,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3C,YAAIE,iBAAiB,GAAGJ,WAAW,CAACE,CAAD,CAAX,CAAeG,IAAf,EAAxB;AACA,YAAID,iBAAiB,CAACE,OAAlB,CAA0BP,UAA1B,MAA0C,CAA9C,EACE,OAAOK,iBAAiB,CAACG,SAAlB,CACLR,UAAU,CAACI,MADN,EAELC,iBAAiB,CAACD,MAFb,CAAP;AAIH;AACF,KAXD,CAWE,OAAOR,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAe,2BAAf,EAA2Cf,IAA3C;AACA,aAAO0B,SAAP;AACD;AACF,GAjCoB;;AAkCrBC,EAAAA,YAAY,CAAC3B,IAAD,EAAO;AACjBF,IAAAA,OAAO,CAACC,WAAR,CAAoBC,IAApB,EAA0B,EAA1B,EAA8B,CAAC,CAA/B;AACD;;AApCoB,CAAhB","sourcesContent":["export const Cookies = {\n  writeCookie(name, value, hours, path) {\n    try {\n      if (hours) {\n        var date = new Date();\n        date.setTime(date.getTime() + hours * 60 * 60 * 1000);\n        var expires = \"; expires=\" + date.toGMTString();\n      } else {\n        // eslint-disable-next-line no-redeclare\n        var expires = \"\";\n      }\n      let pathName = path ? path : \"/\";\n      document.cookie = name + \"=\" + value + expires + \"; path=\" + pathName;\n    } catch (err) {\n      console.error(`Error writing to cookie`, name, value);\n    }\n  },\n  readCookie(name) {\n    try {\n      let nameEquals = name + \"=\";\n      let cookieArray = document.cookie.split(\";\");\n      for (let i = 0; i < cookieArray.length; i++) {\n        let cookieToBeChecked = cookieArray[i].trim();\n        if (cookieToBeChecked.indexOf(nameEquals) === 0)\n          return cookieToBeChecked.substring(\n            nameEquals.length,\n            cookieToBeChecked.length\n          );\n      }\n    } catch (err) {\n      console.error(`Error getting from cookie`, name);\n      return undefined;\n    }\n  },\n  deleteCookie(name) {\n    Cookies.writeCookie(name, \"\", -1);\n  }\n};"]},"metadata":{},"sourceType":"module"}