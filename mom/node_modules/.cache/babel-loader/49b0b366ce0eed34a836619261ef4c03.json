{"ast":null,"code":"var _jsxFileName = \"/Users/wineikhaing/Desktop/MIU/WAA/Project/Code/MiniOnlineMarket/mom/src/pages/public/register/Register.js\";\nimport { Box, Button, Card, CardContent, Container, FormControl, Grid, InputLabel, MenuItem, Select, TextField } from \"@material-ui/core\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport MOM, { API_URL } from \"../../../api/api\";\nimport logo from \"../../../assets/img/gop.png\";\nimport AddAlertMessage from \"../../../components/alert/Alert\";\nimport Spinner from \"../../../components/loader/Loader\"; // context\n\nimport { ENTER_VALID_EMAIL, REQUIRED_FIELD, SOMETHING_WENT_WRONG } from \"../../../utils/constants/index\";\nimport styles from \"./style\";\nexport default function Register(props) {\n  const classes = styles();\n  const {\n    register,\n    handleSubmit,\n    errors,\n    reset\n  } = useForm();\n  const [role, setRole] = useState();\n\n  const handleChange = event => {\n    setRole(event.target.value);\n  };\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const onSubmit = data => {\n    setIsLoading(true);\n    data.role = role;\n    let url;\n\n    if (!!data.id) {\n      url = MOM.put(API_URL.user, data);\n    } else {\n      url = MOM.post(API_URL.user, data);\n    }\n\n    url.then(response => {\n      setIsLoading(false);\n      let data = response.data;\n      AddAlertMessage({\n        type: \"success\",\n        message: \"User Created\"\n      });\n      reset();\n      props.history.push(\"/\");\n    }).catch(error => {\n      setIsLoading(false);\n      AddAlertMessage({\n        type: \"error\",\n        message: SOMETHING_WENT_WRONG\n      });\n    });\n  };\n\n  return React.createElement(Container, {\n    maxWidth: \"sm\",\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Box, {\n    textAlign: \"center\",\n    my: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: logo,\n    alt: \"MOM Logo\",\n    width: \"124\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Box, {\n    fontSize: \"h5.fontSize\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \" MOM \"), React.createElement(Box, {\n    component: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \" Mini Online Market \")), React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    id: \"name\",\n    label: \"Name\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    name: \"name\",\n    inputRef: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), errors.name && React.createElement(\"span\", {\n    className: \"error-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, REQUIRED_FIELD)), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    id: \"email\",\n    label: \"email\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    name: \"email\",\n    inputRef: register({\n      required: true,\n      pattern: /\\S+@\\S+\\.\\S+/\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), errors.email && errors.email.type === \"required\" && React.createElement(\"span\", {\n    className: \"error-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, REQUIRED_FIELD), errors.email && errors.email.type === \"pattern\" && React.createElement(\"span\", {\n    className: \"error-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, ENTER_VALID_EMAIL)), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    id: \"password\",\n    label: \"password\",\n    type: \"password\",\n    autoComplete: \"current-password\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    name: \"password\",\n    inputRef: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), errors.password && React.createElement(\"span\", {\n    className: \"error-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, REQUIRED_FIELD)), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    id: \"address\",\n    label: \"Address\",\n    type: \"text\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    name: \"address\",\n    inputRef: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), errors.address && React.createElement(\"span\", {\n    className: \"error-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, REQUIRED_FIELD)), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    id: \"phoneNumber\",\n    label: \"Phone Number\",\n    type: \"text\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    name: \"phone\",\n    inputRef: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), errors.phoneNumber && React.createElement(\"span\", {\n    className: \"error-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, REQUIRED_FIELD)), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"demo-simple-select-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Select Role\"), React.createElement(Select, {\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    label: \"Age\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"ROLE_SELLER\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"SELLER\"), React.createElement(MenuItem, {\n    value: \"ROLE_BUYER\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"BUYER\"))), errors.phoneNumber && React.createElement(\"span\", {\n    className: \"error-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, REQUIRED_FIELD)), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.loginBtnContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, isLoading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }) : React.createElement(Button, {\n    endIcon: React.createElement(ExitToAppIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }),\n    size: \"large\",\n    fullWidth: true,\n    color: \"primary\",\n    variant: \"contained\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, \"Signup\")), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.loginBtnContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(Button, {\n    endIcon: React.createElement(ExitToAppIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }),\n    size: \"large\",\n    fullWidth: true,\n    color: \"primary\",\n    variant: \"contained\",\n    type: \"button\",\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, \"Go to Log In\"))))));\n}","map":{"version":3,"sources":["/Users/wineikhaing/Desktop/MIU/WAA/Project/Code/MiniOnlineMarket/mom/src/pages/public/register/Register.js"],"names":["Box","Button","Card","CardContent","Container","FormControl","Grid","InputLabel","MenuItem","Select","TextField","ExitToAppIcon","React","useState","useForm","MOM","API_URL","logo","AddAlertMessage","Spinner","ENTER_VALID_EMAIL","REQUIRED_FIELD","SOMETHING_WENT_WRONG","styles","Register","props","classes","register","handleSubmit","errors","reset","role","setRole","handleChange","event","target","value","isLoading","setIsLoading","onSubmit","data","url","id","put","user","post","then","response","type","message","history","push","catch","error","root","required","name","pattern","email","password","address","phoneNumber","loginBtnContainer"],"mappings":";AAAA,SACIA,GADJ,EAEIC,MAFJ,EAGIC,IAHJ,EAIIC,WAJJ,EAKIC,SALJ,EAMIC,WANJ,EAOIC,IAPJ,EAQIC,UARJ,EASIC,QATJ,EAUIC,MAVJ,EAWIC,SAXJ,QAYO,mBAZP;AAaA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,OAAR,QAAsB,iBAAtB;AACA,OAAOC,GAAP,IAAaC,OAAb,QAA2B,kBAA3B;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,OAAOC,OAAP,MAAoB,mCAApB,C,CACA;;AACA,SAAQC,iBAAR,EAA2BC,cAA3B,EAA2CC,oBAA3C,QAAuE,gCAAvE;AACA,OAAOC,MAAP,MAAmB,SAAnB;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACpC,QAAMC,OAAO,GAAGH,MAAM,EAAtB;AACA,QAAM;AAAEI,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,MAA1B;AAAkCC,IAAAA;AAAlC,MAA4ChB,OAAO,EAAzD;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,EAAhC;;AAEA,QAAMoB,YAAY,GAAIC,KAAD,IAAW;AAC5BF,IAAAA,OAAO,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACH,GAFD;;AAIA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BzB,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAM0B,QAAQ,GAAIC,IAAD,IAAU;AACvBF,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,IAAI,CAACT,IAAL,GAAYA,IAAZ;AACA,QAAIU,GAAJ;;AACA,QAAI,CAAC,CAACD,IAAI,CAACE,EAAX,EAAe;AACXD,MAAAA,GAAG,GAAG1B,GAAG,CAAC4B,GAAJ,CAAQ3B,OAAO,CAAC4B,IAAhB,EAAsBJ,IAAtB,CAAN;AACH,KAFD,MAEM;AACFC,MAAAA,GAAG,GAAG1B,GAAG,CAAC8B,IAAJ,CAAS7B,OAAO,CAAC4B,IAAjB,EAAuBJ,IAAvB,CAAN;AACH;;AACGC,IAAAA,GAAG,CAACK,IAAJ,CAAUC,QAAD,IAAc;AACnBT,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,UAAIE,IAAI,GAAGO,QAAQ,CAACP,IAApB;AAEItB,MAAAA,eAAe,CAAC;AAAE8B,QAAAA,IAAI,EAAE,SAAR;AAAmBC,QAAAA,OAAO,EAAE;AAA5B,OAAD,CAAf;AACAnB,MAAAA,KAAK;AACLL,MAAAA,KAAK,CAACyB,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACP,KAPD,EAQCC,KARD,CAQQC,KAAD,IAAW;AACdf,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACApB,MAAAA,eAAe,CAAC;AAAE8B,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,OAAO,EAAE3B;AAA1B,OAAD,CAAf;AACH,KAXD;AAYP,GArBD;;AAuBA,SACI,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAEI,OAAO,CAAC4B,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,EAAE,EAAE,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAErC,IAAV;AAAgB,IAAA,GAAG,EAAC,UAApB;AAA+B,IAAA,KAAK,EAAC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,GAAD;AAAK,IAAA,QAAQ,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,EAGI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHJ,CADJ,EAMI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,QAAQ,EAAEW,YAAY,CAACW,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,SAAS,MADb;AAEI,IAAA,EAAE,EAAC,MAFP;AAGI,IAAA,KAAK,EAAC,MAHV;AAII,IAAA,MAAM,EAAC,QAJX;AAKI,IAAA,OAAO,EAAC,UALZ;AAMI,IAAA,IAAI,EAAC,MANT;AAOI,IAAA,QAAQ,EAAEZ,QAAQ,CAAC;AACf4B,MAAAA,QAAQ,EAAE;AADK,KAAD,CAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAYK1B,MAAM,CAAC2B,IAAP,IACG;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCnC,cAAjC,CAbR,CADJ,EAiBI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,SAAS,MADb;AAEI,IAAA,EAAE,EAAC,OAFP;AAGI,IAAA,KAAK,EAAC,OAHV;AAII,IAAA,MAAM,EAAC,QAJX;AAKI,IAAA,OAAO,EAAC,UALZ;AAMI,IAAA,IAAI,EAAC,OANT;AAOI,IAAA,QAAQ,EAAEM,QAAQ,CAAC;AACf4B,MAAAA,QAAQ,EAAE,IADK;AAEfE,MAAAA,OAAO,EAAE;AAFM,KAAD,CAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAaK5B,MAAM,CAAC6B,KAAP,IAAgB7B,MAAM,CAAC6B,KAAP,CAAaV,IAAb,KAAsB,UAAtC,IACG;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiC3B,cAAjC,CAdR,EAgBKQ,MAAM,CAAC6B,KAAP,IAAgB7B,MAAM,CAAC6B,KAAP,CAAaV,IAAb,KAAsB,SAAtC,IACG;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiC5B,iBAAjC,CAjBR,CAjBJ,EAqCI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,SAAS,MADb;AAEI,IAAA,EAAE,EAAC,UAFP;AAGI,IAAA,KAAK,EAAC,UAHV;AAII,IAAA,IAAI,EAAC,UAJT;AAKI,IAAA,YAAY,EAAC,kBALjB;AAMI,IAAA,MAAM,EAAC,QANX;AAOI,IAAA,OAAO,EAAC,UAPZ;AAQI,IAAA,IAAI,EAAC,UART;AASI,IAAA,QAAQ,EAAEO,QAAQ,CAAC;AACf4B,MAAAA,QAAQ,EAAE;AADK,KAAD,CATtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAcK1B,MAAM,CAAC8B,QAAP,IACG;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCtC,cAAjC,CAfR,CArCJ,EAuDI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,SAAS,MADb;AAEI,IAAA,EAAE,EAAC,SAFP;AAGI,IAAA,KAAK,EAAC,SAHV;AAII,IAAA,IAAI,EAAC,MAJT;AAKI,IAAA,MAAM,EAAC,QALX;AAMI,IAAA,OAAO,EAAC,UANZ;AAOI,IAAA,IAAI,EAAC,SAPT;AAQI,IAAA,QAAQ,EAAEM,QAAQ,CAAC;AACf4B,MAAAA,QAAQ,EAAE;AADK,KAAD,CARtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAaK1B,MAAM,CAAC+B,OAAP,IACG;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCvC,cAAjC,CAdR,CAvDJ,EAwEI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,SAAS,MADb;AAEI,IAAA,EAAE,EAAC,aAFP;AAGI,IAAA,KAAK,EAAC,cAHV;AAII,IAAA,IAAI,EAAC,MAJT;AAKI,IAAA,MAAM,EAAC,QALX;AAMI,IAAA,OAAO,EAAC,UANZ;AAOI,IAAA,IAAI,EAAC,OAPT;AAQI,IAAA,QAAQ,EAAEM,QAAQ,CAAC;AACf4B,MAAAA,QAAQ,EAAE;AADK,KAAD,CARtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAaK1B,MAAM,CAACgC,WAAP,IACG;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCxC,cAAjC,CAdR,CAxEJ,EAyFI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAa,IAAA,SAAS,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAC,0BADZ;AAEI,IAAA,EAAE,EAAC,oBAFP;AAGI,IAAA,KAAK,EAAC,KAHV;AAII,IAAA,QAAQ,EAAEY,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,EAOI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPJ,CAFJ,CADJ,EAaKJ,MAAM,CAACgC,WAAP,IACG;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCxC,cAAjC,CAdR,CAzFJ,EA0GI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,SAAS,EAAEK,OAAO,CAACoC,iBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKzB,SAAS,GACN,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAGV,oBAAC,MAAD;AACI,IAAA,OAAO,EAAE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADb;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,SAAS,MAHb;AAII,IAAA,KAAK,EAAC,SAJV;AAKI,IAAA,OAAO,EAAC,WALZ;AAMI,IAAA,IAAI,EAAC,QANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,CA1GJ,EA0HI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,SAAS,EAAEX,OAAO,CAACoC,iBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,oBAAC,MAAD;AACI,IAAA,OAAO,EAAE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADb;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,SAAS,MAHb;AAII,IAAA,KAAK,EAAC,SAJV;AAKI,IAAA,OAAO,EAAC,WALZ;AAMI,IAAA,IAAI,EAAC,QANT;AAOI,IAAA,IAAI,EAAE,GAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADR,CA1HJ,CADJ,CADJ,CANJ,CADJ;AAqJH","sourcesContent":["import {\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardContent,\r\n    Container,\r\n    FormControl,\r\n    Grid,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    TextField,\r\n} from \"@material-ui/core\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport React, {useState} from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport MOM, {API_URL} from \"../../../api/api\";\r\nimport logo from \"../../../assets/img/gop.png\";\r\nimport AddAlertMessage from \"../../../components/alert/Alert\";\r\nimport Spinner from \"../../../components/loader/Loader\";\r\n// context\r\nimport {ENTER_VALID_EMAIL, REQUIRED_FIELD, SOMETHING_WENT_WRONG,} from \"../../../utils/constants/index\";\r\nimport styles from \"./style\";\r\n\r\nexport default function Register(props) {\r\n    const classes = styles();\r\n    const { register, handleSubmit, errors, reset } = useForm();\r\n    const [role, setRole] = useState();\r\n\r\n    const handleChange = (event) => {\r\n        setRole(event.target.value);\r\n    }\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const onSubmit = (data) => {\r\n        setIsLoading(true);\r\n        data.role = role;\r\n        let url;\r\n        if (!!data.id) {\r\n            url = MOM.put(API_URL.user, data)\r\n        } else{\r\n            url = MOM.post(API_URL.user, data)\r\n        }\r\n            url.then((response) => {\r\n                setIsLoading(false);\r\n                let data = response.data;\r\n                    \r\n                    AddAlertMessage({ type: \"success\", message: \"User Created\" });\r\n                    reset();\r\n                    props.history.push(\"/\");\r\n            })\r\n            .catch((error) => {\r\n                setIsLoading(false);\r\n                AddAlertMessage({ type: \"error\", message: SOMETHING_WENT_WRONG });\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\" className={classes.root}>\r\n            <Box textAlign=\"center\" my={3}>\r\n                <img src={logo} alt=\"MOM Logo\" width=\"124\" />\r\n                <Box fontSize=\"h5.fontSize\"> MOM </Box>\r\n                <Box component=\"small\"> Mini Online Market </Box>\r\n            </Box>\r\n            <Card>\r\n                <CardContent>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                id=\"name\"\r\n                                label=\"Name\"\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                name=\"name\"\r\n                                inputRef={register({\r\n                                    required: true,\r\n                                })}\r\n                            />\r\n                            {errors.name && (\r\n                                <span className=\"error-message\">{REQUIRED_FIELD}</span>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"email\"\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                name=\"email\"\r\n                                inputRef={register({\r\n                                    required: true,\r\n                                    pattern: /\\S+@\\S+\\.\\S+/,\r\n                                })}\r\n                            />\r\n                            {errors.email && errors.email.type === \"required\" && (\r\n                                <span className=\"error-message\">{REQUIRED_FIELD}</span>\r\n                            )}\r\n                            {errors.email && errors.email.type === \"pattern\" && (\r\n                                <span className=\"error-message\">{ENTER_VALID_EMAIL}</span>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                id=\"password\"\r\n                                label=\"password\"\r\n                                type=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                name=\"password\"\r\n                                inputRef={register({\r\n                                    required: true,\r\n                                })}\r\n                            />\r\n                            {errors.password && (\r\n                                <span className=\"error-message\">{REQUIRED_FIELD}</span>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                id=\"address\"\r\n                                label=\"Address\"\r\n                                type=\"text\"\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                name=\"address\"\r\n                                inputRef={register({\r\n                                    required: true,\r\n                                })}\r\n                            />\r\n                            {errors.address && (\r\n                                <span className=\"error-message\">{REQUIRED_FIELD}</span>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                id=\"phoneNumber\"\r\n                                label=\"Phone Number\"\r\n                                type=\"text\"\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                name=\"phone\"\r\n                                inputRef={register({\r\n                                    required: true,\r\n                                })}\r\n                            />\r\n                            {errors.phoneNumber && (\r\n                                <span className=\"error-message\">{REQUIRED_FIELD}</span>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel id=\"demo-simple-select-label\">Select Role</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    label=\"Age\"\r\n                                    onChange={handleChange}\r\n                                >\r\n                                    <MenuItem value=\"ROLE_SELLER\">SELLER</MenuItem>\r\n                                    <MenuItem value=\"ROLE_BUYER\">BUYER</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                            {errors.phoneNumber && (\r\n                                <span className=\"error-message\">{REQUIRED_FIELD}</span>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item xs={12} className={classes.loginBtnContainer}>\r\n                            {isLoading ? (\r\n                                <Spinner />\r\n                            ) : (\r\n                            <Button\r\n                                endIcon={<ExitToAppIcon />}\r\n                                size=\"large\"\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                variant=\"contained\"\r\n                                type=\"submit\"\r\n                            >\r\n                                Signup\r\n                            </Button>\r\n                                )}\r\n                        </Grid>\r\n                        <Grid item xs={12} className={classes.loginBtnContainer}>\r\n                                <Button\r\n                                    endIcon={<ExitToAppIcon />}\r\n                                    size=\"large\"\r\n                                    fullWidth\r\n                                    color=\"primary\"\r\n                                    variant=\"contained\"\r\n                                    type=\"button\"\r\n                                    href={\"/\"}\r\n                                >\r\n                                   Go to Log In\r\n                                </Button>\r\n                        </Grid>\r\n                    </form>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}