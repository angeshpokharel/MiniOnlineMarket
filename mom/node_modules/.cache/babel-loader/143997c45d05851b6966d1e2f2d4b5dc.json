{"ast":null,"code":"/* eslint-disable no-console */\nexport const SessionStorage = {\n  setItem(key, value) {\n    try {\n      sessionStorage.setItem(key, JSON.stringify(value));\n    } catch (err) {\n      console.error(`Error writing to sessionStorage`, key, value);\n    }\n  },\n\n  getItem(key) {\n    try {\n      return JSON.parse(sessionStorage.getItem(key));\n    } catch (err) {\n      console.error(`Error getting from sessionStorage`, key);\n      return undefined;\n    }\n  },\n\n  removeItem(key) {\n    try {\n      sessionStorage.removeItem(key);\n    } catch (err) {\n      console.error(`Error removing item from sessionStorage`, key);\n    }\n  },\n\n  clear() {\n    try {\n      sessionStorage.clear();\n    } catch (err) {\n      console.error('Error clearing sessionStorage');\n    }\n  }\n\n};","map":{"version":3,"sources":["/Users/wineikhaing/Desktop/MIU/WAA/Project/Code/MiniOnlineMarket/mom/src/utils/storage/sessionStorage.js"],"names":["SessionStorage","setItem","key","value","sessionStorage","JSON","stringify","err","console","error","getItem","parse","undefined","removeItem","clear"],"mappings":"AAAA;AACA,OAAO,MAAMA,cAAc,GAAG;AAC5BC,EAAAA,OAAO,CAACC,GAAD,EAAMC,KAAN,EAAa;AAClB,QAAI;AACFC,MAAAA,cAAc,CAACH,OAAf,CAAuBC,GAAvB,EAA4BG,IAAI,CAACC,SAAL,CAAeH,KAAf,CAA5B;AACD,KAFD,CAEE,OAAOI,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAe,iCAAf,EAAiDP,GAAjD,EAAsDC,KAAtD;AACD;AACF,GAP2B;;AAQ5BO,EAAAA,OAAO,CAACR,GAAD,EAAM;AACX,QAAI;AACF,aAAOG,IAAI,CAACM,KAAL,CAAWP,cAAc,CAACM,OAAf,CAAuBR,GAAvB,CAAX,CAAP;AACD,KAFD,CAEE,OAAOK,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAe,mCAAf,EAAmDP,GAAnD;AACA,aAAOU,SAAP;AACD;AACF,GAf2B;;AAgB5BC,EAAAA,UAAU,CAACX,GAAD,EAAM;AACd,QAAI;AACFE,MAAAA,cAAc,CAACS,UAAf,CAA0BX,GAA1B;AACD,KAFD,CAEE,OAAOK,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAe,yCAAf,EAAyDP,GAAzD;AACD;AACF,GAtB2B;;AAuB5BY,EAAAA,KAAK,GAAG;AACN,QAAI;AACFV,MAAAA,cAAc,CAACU,KAAf;AACD,KAFD,CAEE,OAAOP,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd;AACD;AACF;;AA7B2B,CAAvB","sourcesContent":["/* eslint-disable no-console */\nexport const SessionStorage = {\n  setItem(key, value) {\n    try {\n      sessionStorage.setItem(key, JSON.stringify(value));\n    } catch (err) {\n      console.error(`Error writing to sessionStorage`, key, value);\n    }\n  },\n  getItem(key) {\n    try {\n      return JSON.parse(sessionStorage.getItem(key));\n    } catch (err) {\n      console.error(`Error getting from sessionStorage`, key);\n      return undefined;\n    }\n  },\n  removeItem(key) {\n    try {\n      sessionStorage.removeItem(key);\n    } catch (err) {\n      console.error(`Error removing item from sessionStorage`, key);\n    }\n  },\n  clear() {\n    try {\n      sessionStorage.clear();\n    } catch (err) {\n      console.error('Error clearing sessionStorage');\n    }\n  },\n};"]},"metadata":{},"sourceType":"module"}