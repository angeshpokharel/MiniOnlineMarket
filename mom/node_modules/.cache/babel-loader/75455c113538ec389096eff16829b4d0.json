{"ast":null,"code":"import axios from \"axios\";\nimport { AppUtils } from \"../utils/appUtils\";\nimport { IS_SESSION_EXPIRED } from \"../utils/constants\";\nimport { SessionStorage } from \"../utils/storage/sessionStorage\";\nexport const LOCAL_CONSTANTS = {\n  BASE_URL: \"http://localhost:8080/\"\n};\nconst BASE_URL = LOCAL_CONSTANTS.BASE_URL;\nexport const API_URL = {\n  login: BASE_URL + \"api/login\",\n  user: BASE_URL + \"users\",\n  changePassword: BASE_URL + \"api/change-password\",\n  logout: BASE_URL + \"api/logout\"\n};\nconst MOM = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nMOM.interceptors.request.use(config => {\n  if (config.baseURL === BASE_URL && !config.headers.Authorization) {\n    var authToken = AppUtils.getAuthToken();\n\n    if (authToken) {\n      config.headers.Authorization = authToken;\n    }\n  }\n\n  return config;\n}, error => Promise.reject(error));\nMOM.interceptors.response.use(response => {\n  return response;\n}, error => {\n  if (error.response) {\n    if (error.response.status === 401 || error.response.status === 403) {\n      AppUtils.removeUserRef();\n      SessionStorage.setItem(IS_SESSION_EXPIRED, \"true\");\n      window.location.href = \"/\";\n    }\n  } else {\n    return Promise.reject(error);\n  }\n});\nexport default MOM;","map":{"version":3,"sources":["/Users/wineikhaing/Desktop/MIU/WAA/Project/Code/MiniOnlineMarket/mom/src/api/api.js"],"names":["axios","AppUtils","IS_SESSION_EXPIRED","SessionStorage","LOCAL_CONSTANTS","BASE_URL","API_URL","login","user","changePassword","logout","MOM","create","baseURL","headers","Accept","interceptors","request","use","config","Authorization","authToken","getAuthToken","error","Promise","reject","response","status","removeUserRef","setItem","window","location","href"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,kBAAT,QAAmC,oBAAnC;AACA,SAASC,cAAT,QAA+B,iCAA/B;AAEA,OAAO,MAAMC,eAAe,GAAG;AAC7BC,EAAAA,QAAQ,EAAE;AADmB,CAAxB;AAIP,MAAMA,QAAQ,GAAGD,eAAe,CAACC,QAAjC;AAEA,OAAO,MAAMC,OAAO,GAAG;AACrBC,EAAAA,KAAK,EAAEF,QAAQ,GAAG,WADG;AAErBG,EAAAA,IAAI,EAAEH,QAAQ,GAAG,OAFI;AAGrBI,EAAAA,cAAc,EAAEJ,QAAQ,GAAG,qBAHN;AAIrBK,EAAAA,MAAM,EAAEL,QAAQ,GAAG;AAJE,CAAhB;AAOP,MAAMM,GAAG,GAAGX,KAAK,CAACY,MAAN,CAAa;AACvBC,EAAAA,OAAO,EAAER,QADc;AAEvBS,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE,kBADD;AAEP,oBAAgB;AAFT;AAFc,CAAb,CAAZ;AAQAJ,GAAG,CAACK,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CACGC,MAAD,IAAY;AACV,MAAIA,MAAM,CAACN,OAAP,KAAmBR,QAAnB,IAA+B,CAACc,MAAM,CAACL,OAAP,CAAeM,aAAnD,EAAkE;AAChE,QAAIC,SAAS,GAAGpB,QAAQ,CAACqB,YAAT,EAAhB;;AACA,QAAID,SAAJ,EAAe;AACbF,MAAAA,MAAM,CAACL,OAAP,CAAeM,aAAf,GAA+BC,SAA/B;AACD;AACF;;AACD,SAAOF,MAAP;AACD,CATH,EAUGI,KAAD,IAAWC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAVb;AAaAZ,GAAG,CAACK,YAAJ,CAAiBU,QAAjB,CAA0BR,GAA1B,CACGQ,QAAD,IAAc;AACZ,SAAOA,QAAP;AACD,CAHH,EAIGH,KAAD,IAAW;AACT,MAAIA,KAAK,CAACG,QAAV,EAAoB;AAClB,QAAIH,KAAK,CAACG,QAAN,CAAeC,MAAf,KAA0B,GAA1B,IAAiCJ,KAAK,CAACG,QAAN,CAAeC,MAAf,KAA0B,GAA/D,EAAoE;AAClE1B,MAAAA,QAAQ,CAAC2B,aAAT;AACAzB,MAAAA,cAAc,CAAC0B,OAAf,CAAuB3B,kBAAvB,EAA2C,MAA3C;AACA4B,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACD;AACF,GAND,MAMO;AACL,WAAOR,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD;AACF,CAdH;AAiBA,eAAeZ,GAAf","sourcesContent":["import axios from \"axios\";\r\nimport { AppUtils } from \"../utils/appUtils\";\r\nimport { IS_SESSION_EXPIRED } from \"../utils/constants\";\r\nimport { SessionStorage } from \"../utils/storage/sessionStorage\";\r\n\r\nexport const LOCAL_CONSTANTS = {\r\n  BASE_URL: \"http://localhost:8080/\",\r\n};\r\n\r\nconst BASE_URL = LOCAL_CONSTANTS.BASE_URL;\r\n\r\nexport const API_URL = {\r\n  login: BASE_URL + \"api/login\",\r\n  user: BASE_URL + \"users\",\r\n  changePassword: BASE_URL + \"api/change-password\",\r\n  logout: BASE_URL + \"api/logout\",\r\n};\r\n\r\nconst MOM = axios.create({\r\n  baseURL: BASE_URL,\r\n  headers: {\r\n    Accept: \"application/json\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nMOM.interceptors.request.use(\r\n  (config) => {\r\n    if (config.baseURL === BASE_URL && !config.headers.Authorization) {\r\n      var authToken = AppUtils.getAuthToken();\r\n      if (authToken) {\r\n        config.headers.Authorization = authToken;\r\n      }\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\nMOM.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (error.response) {\r\n      if (error.response.status === 401 || error.response.status === 403) {\r\n        AppUtils.removeUserRef();\r\n        SessionStorage.setItem(IS_SESSION_EXPIRED, \"true\");\r\n        window.location.href = \"/\";\r\n      }\r\n    } else {\r\n      return Promise.reject(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport default MOM;\r\n"]},"metadata":{},"sourceType":"module"}