{"ast":null,"code":"var _jsxFileName = \"/Users/angeshpokharel/Downloads/Compressed/mom/src/pages/public/login/Login.js\";\nimport { Box, Button, Card, CardContent, Checkbox, Container, FormControlLabel, Grid, TextField } from \"@material-ui/core\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport MOM, { API_URL } from \"../../../api/api\";\nimport logo from \"../../../assets/img/gop.png\";\nimport AddAlertMessage from \"../../../components/alert/Alert\";\nimport Spinner from \"../../../components/loader/Loader\"; // context\n\nimport { useUserDispatch } from \"../../../context/UserContext\";\nimport { AppUtils } from \"../../../utils/appUtils\";\nimport { ENTER_VALID_EMAIL, IS_SESSION_EXPIRED, LOGIN_FAILURE, LOGIN_SUCCESS, REQUIRED_FIELD, SESSION_EXPIRED, SOMETHING_WENT_WRONG } from \"../../../utils/constants/index\";\nimport { SessionStorage } from \"../../../utils/storage/sessionStorage\";\nimport styles from \"./style\";\nexport default function LoginForm(props) {\n  const classes = styles();\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm(); // global\n\n  var userDispatch = useUserDispatch(); // local\n\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    if (SessionStorage.getItem(IS_SESSION_EXPIRED) === \"true\") {\n      AddAlertMessage({\n        type: \"error\",\n        message: SESSION_EXPIRED\n      });\n      SessionStorage.removeItem(IS_SESSION_EXPIRED);\n    }\n  }, []);\n\n  const onSubmit = data => {\n    setIsLoading(true);\n    MOM.post(API_URL.login, data).then(response => {\n      setIsLoading(false);\n      let data = response.data;\n\n      if (data.type === \"success\") {\n        AppUtils.saveUserCredentials(data);\n        userDispatch({\n          type: LOGIN_SUCCESS\n        });\n        props.history.push(\"/\");\n      } else {\n        userDispatch({\n          type: LOGIN_FAILURE\n        });\n        AddAlertMessage({\n          type: data.type,\n          message: data.message\n        });\n      }\n    }).catch(error => {\n      setIsLoading(false);\n      AddAlertMessage({\n        type: \"error\",\n        message: SOMETHING_WENT_WRONG\n      });\n      userDispatch({\n        type: LOGIN_FAILURE\n      });\n    });\n  };\n\n  return React.createElement(Container, {\n    maxWidth: \"sm\",\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Box, {\n    textAlign: \"center\",\n    my: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: logo,\n    alt: \"MOM Logo\",\n    width: \"124\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(Box, {\n    fontSize: \"h5.fontSize\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \" MOM \"), React.createElement(Box, {\n    component: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \" Mini Online Market \")), React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    id: \"email\",\n    label: \"email\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    name: \"email\",\n    inputRef: register({\n      required: true,\n      pattern: /\\S+@\\S+\\.\\S+/\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), errors.email && errors.email.type === \"required\" && React.createElement(\"span\", {\n    className: \"error-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, REQUIRED_FIELD), errors.email && errors.email.type === \"pattern\" && React.createElement(\"span\", {\n    className: \"error-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, ENTER_VALID_EMAIL)), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    id: \"password\",\n    label: \"password\",\n    type: \"password\",\n    autoComplete: \"current-password\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    name: \"password\",\n    inputRef: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), errors.password && React.createElement(\"span\", {\n    className: \"error-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, REQUIRED_FIELD)), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }),\n    label: \"Remember Me\",\n    name: \"rememberMe\",\n    inputRef: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.loginBtnContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, isLoading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }) : React.createElement(Button, {\n    endIcon: React.createElement(ExitToAppIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }),\n    size: \"large\",\n    fullWidth: true,\n    color: \"primary\",\n    variant: \"contained\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Log In\")), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.loginBtnContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(Button, {\n    endIcon: React.createElement(ExitToAppIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }),\n    size: \"large\",\n    fullWidth: true,\n    color: \"primary\",\n    variant: \"contained\",\n    type: \"button\",\n    href: \"/register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"Signup\"))))));\n}","map":{"version":3,"sources":["/Users/angeshpokharel/Downloads/Compressed/mom/src/pages/public/login/Login.js"],"names":["Box","Button","Card","CardContent","Checkbox","Container","FormControlLabel","Grid","TextField","ExitToAppIcon","React","useEffect","useState","useForm","MOM","API_URL","logo","AddAlertMessage","Spinner","useUserDispatch","AppUtils","ENTER_VALID_EMAIL","IS_SESSION_EXPIRED","LOGIN_FAILURE","LOGIN_SUCCESS","REQUIRED_FIELD","SESSION_EXPIRED","SOMETHING_WENT_WRONG","SessionStorage","styles","LoginForm","props","classes","register","handleSubmit","errors","userDispatch","isLoading","setIsLoading","getItem","type","message","removeItem","onSubmit","data","post","login","then","response","saveUserCredentials","history","push","catch","error","root","required","pattern","email","password","loginBtnContainer"],"mappings":"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","sourcesContent":["import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Checkbox,\r\n  Container,\r\n  FormControlLabel,\r\n  Grid,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport MOM, { API_URL } from \"../../../api/api\";\r\nimport logo from \"../../../assets/img/gop.png\";\r\nimport AddAlertMessage from \"../../../components/alert/Alert\";\r\nimport Spinner from \"../../../components/loader/Loader\";\r\n// context\r\nimport { useUserDispatch } from \"../../../context/UserContext\";\r\nimport { AppUtils } from \"../../../utils/appUtils\";\r\nimport {\r\n  ENTER_VALID_EMAIL,\r\n  IS_SESSION_EXPIRED,\r\n  LOGIN_FAILURE,\r\n  LOGIN_SUCCESS,\r\n  REQUIRED_FIELD,\r\n  SESSION_EXPIRED,\r\n  SOMETHING_WENT_WRONG,\r\n} from \"../../../utils/constants/index\";\r\nimport { SessionStorage } from \"../../../utils/storage/sessionStorage\";\r\nimport styles from \"./style\";\r\n\r\nexport default function LoginForm(props) {\r\n  const classes = styles();\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  // global\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (SessionStorage.getItem(IS_SESSION_EXPIRED) === \"true\") {\r\n      AddAlertMessage({\r\n        type: \"error\",\r\n        message: SESSION_EXPIRED,\r\n      });\r\n      SessionStorage.removeItem(IS_SESSION_EXPIRED);\r\n    }\r\n  }, []);\r\n\r\n  const onSubmit = (data) => {\r\n    setIsLoading(true);\r\n    MOM.post(API_URL.login, data)\r\n      .then((response) => {\r\n        setIsLoading(false);\r\n        let data = response.data;\r\n        if (data.type === \"success\") {\r\n          AppUtils.saveUserCredentials(data);\r\n          userDispatch({ type: LOGIN_SUCCESS });\r\n          props.history.push(\"/\");\r\n        } else {\r\n          userDispatch({ type: LOGIN_FAILURE });\r\n          AddAlertMessage({ type: data.type, message: data.message });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setIsLoading(false);\r\n        AddAlertMessage({ type: \"error\", message: SOMETHING_WENT_WRONG });\r\n        userDispatch({ type: LOGIN_FAILURE });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" className={classes.root}>\r\n      <Box textAlign=\"center\" my={3}>\r\n        <img src={logo} alt=\"MOM Logo\" width=\"124\" />\r\n        <Box fontSize=\"h5.fontSize\"> MOM </Box>\r\n        <Box component=\"small\"> Mini Online Market </Box>\r\n      </Box>\r\n      <Card>\r\n        <CardContent>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"email\"\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                name=\"email\"\r\n                inputRef={register({\r\n                  required: true,\r\n                  pattern: /\\S+@\\S+\\.\\S+/,\r\n                })}\r\n              />\r\n              {errors.email && errors.email.type === \"required\" && (\r\n                <span className=\"error-message\">{REQUIRED_FIELD}</span>\r\n              )}\r\n              {errors.email && errors.email.type === \"pattern\" && (\r\n                <span className=\"error-message\">{ENTER_VALID_EMAIL}</span>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"password\"\r\n                label=\"password\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                name=\"password\"\r\n                inputRef={register({\r\n                  required: true,\r\n                })}\r\n              />\r\n              {errors.password && (\r\n                <span className=\"error-message\">{REQUIRED_FIELD}</span>\r\n              )}\r\n            </Grid>\r\n            <FormControlLabel\r\n              control={<Checkbox color=\"primary\" />}\r\n              label=\"Remember Me\"\r\n              name=\"rememberMe\"\r\n              inputRef={register}\r\n            />\r\n            <Grid item xs={12} className={classes.loginBtnContainer}>\r\n              {isLoading ? (\r\n                <Spinner />\r\n              ) : (\r\n                <Button\r\n                  endIcon={<ExitToAppIcon />}\r\n                  size=\"large\"\r\n                  fullWidth\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  type=\"submit\"\r\n                >\r\n                  Log In\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.loginBtnContainer}>\r\n                  <Button\r\n                      endIcon={<ExitToAppIcon />}\r\n                      size=\"large\"\r\n                      fullWidth\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                      type=\"button\"\r\n                      href={\"/register\"}\r\n                  >\r\n                    Signup\r\n                  </Button>\r\n            </Grid>\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}