{"ast":null,"code":"var _jsxFileName = \"/Users/angeshpokharel/Downloads/Compressed/mom/src/context/LayoutContext.js\";\nimport React, { useReducer, createContext, useContext } from \"react\";\nimport { TOGGLE_SIDEBAR } from \"../utils/constants/index\";\nconst LayoutStateContext = createContext();\nconst LayoutDispatchContext = createContext();\n\nfunction layoutReducer(state, action) {\n  switch (action.type) {\n    case TOGGLE_SIDEBAR:\n      return { ...state,\n        isSidebarOpened: !state.isSidebarOpened\n      };\n\n    default:\n      {\n        throw new Error(`Unhandled action type: ${action.type}`);\n      }\n  }\n}\n\nfunction LayoutProvider({\n  children\n}) {\n  var [state, dispatch] = useReducer(layoutReducer, {\n    isSidebarOpened: false\n  });\n  return React.createElement(LayoutStateContext.Provider, {\n    value: state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(LayoutDispatchContext.Provider, {\n    value: dispatch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, children));\n}\n\nfunction useLayoutState() {\n  var context = useContext(LayoutStateContext);\n\n  if (context === undefined) {\n    throw new Error(\"useLayoutState must be used within a LayoutProvider\");\n  }\n\n  return context;\n}\n\nfunction useLayoutDispatch() {\n  var context = useContext(LayoutDispatchContext);\n\n  if (context === undefined) {\n    throw new Error(\"useLayoutDispatch must be used within a LayoutProvider\");\n  }\n\n  return context;\n}\n\nfunction toggleSidebar(dispatch) {\n  dispatch({\n    type: TOGGLE_SIDEBAR\n  });\n}\n\nexport { LayoutProvider, useLayoutState, useLayoutDispatch, toggleSidebar };","map":{"version":3,"sources":["/Users/angeshpokharel/Downloads/Compressed/mom/src/context/LayoutContext.js"],"names":["React","useReducer","createContext","useContext","TOGGLE_SIDEBAR","LayoutStateContext","LayoutDispatchContext","layoutReducer","state","action","type","isSidebarOpened","Error","LayoutProvider","children","dispatch","useLayoutState","context","undefined","useLayoutDispatch","toggleSidebar"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,EAA2CC,UAA3C,QAA6D,OAA7D;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAEA,MAAMC,kBAAkB,GAAGH,aAAa,EAAxC;AACA,MAAMI,qBAAqB,GAAGJ,aAAa,EAA3C;;AAEA,SAASK,aAAT,CAAuBC,KAAvB,EAA8BC,MAA9B,EAAsC;AACpC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,cAAL;AACE,aAAO,EAAE,GAAGI,KAAL;AAAYG,QAAAA,eAAe,EAAE,CAACH,KAAK,CAACG;AAApC,OAAP;;AACF;AAAS;AACP,cAAM,IAAIC,KAAJ,CAAW,0BAAyBH,MAAM,CAACC,IAAK,EAAhD,CAAN;AACD;AALH;AAOD;;AAED,SAASG,cAAT,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAsC;AACpC,MAAI,CAACN,KAAD,EAAQO,QAAR,IAAoBd,UAAU,CAACM,aAAD,EAAgB;AAChDI,IAAAA,eAAe,EAAE;AAD+B,GAAhB,CAAlC;AAGA,SACE,oBAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEH,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,qBAAD,CAAuB,QAAvB;AAAgC,IAAA,KAAK,EAAEO,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QADH,CADF,CADF;AAOD;;AAED,SAASE,cAAT,GAA0B;AACxB,MAAIC,OAAO,GAAGd,UAAU,CAACE,kBAAD,CAAxB;;AACA,MAAIY,OAAO,KAAKC,SAAhB,EAA2B;AACzB,UAAM,IAAIN,KAAJ,CAAU,qDAAV,CAAN;AACD;;AACD,SAAOK,OAAP;AACD;;AAED,SAASE,iBAAT,GAA6B;AAC3B,MAAIF,OAAO,GAAGd,UAAU,CAACG,qBAAD,CAAxB;;AACA,MAAIW,OAAO,KAAKC,SAAhB,EAA2B;AACzB,UAAM,IAAIN,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,SAAOK,OAAP;AACD;;AAED,SAASG,aAAT,CAAuBL,QAAvB,EAAiC;AAC/BA,EAAAA,QAAQ,CAAC;AACPL,IAAAA,IAAI,EAAEN;AADC,GAAD,CAAR;AAGD;;AACD,SAASS,cAAT,EAAyBG,cAAzB,EAAyCG,iBAAzC,EAA4DC,aAA5D","sourcesContent":["import React, { useReducer, createContext, useContext } from \"react\";\nimport { TOGGLE_SIDEBAR } from \"../utils/constants/index\";\n\nconst LayoutStateContext = createContext();\nconst LayoutDispatchContext = createContext();\n\nfunction layoutReducer(state, action) {\n  switch (action.type) {\n    case TOGGLE_SIDEBAR:\n      return { ...state, isSidebarOpened: !state.isSidebarOpened };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\nfunction LayoutProvider({ children }) {\n  var [state, dispatch] = useReducer(layoutReducer, {\n    isSidebarOpened: false,\n  });\n  return (\n    <LayoutStateContext.Provider value={state}>\n      <LayoutDispatchContext.Provider value={dispatch}>\n        {children}\n      </LayoutDispatchContext.Provider>\n    </LayoutStateContext.Provider>\n  );\n}\n\nfunction useLayoutState() {\n  var context = useContext(LayoutStateContext);\n  if (context === undefined) {\n    throw new Error(\"useLayoutState must be used within a LayoutProvider\");\n  }\n  return context;\n}\n\nfunction useLayoutDispatch() {\n  var context = useContext(LayoutDispatchContext);\n  if (context === undefined) {\n    throw new Error(\"useLayoutDispatch must be used within a LayoutProvider\");\n  }\n  return context;\n}\n\nfunction toggleSidebar(dispatch) {\n  dispatch({\n    type: TOGGLE_SIDEBAR,\n  });\n}\nexport { LayoutProvider, useLayoutState, useLayoutDispatch, toggleSidebar };"]},"metadata":{},"sourceType":"module"}